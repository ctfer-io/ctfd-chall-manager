name: CI - Local lock

on: 
  push:
    paths-ignore:
      - 'webdocs/**'
      - 'res/**'
  pull_request:

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      NAME: ctfer
      PASSWORD: ctfer

    services:
      chall-manager: 
        image: ctferio/chall-manager:v0.5.0@sha256:a197c53b5b64b91ec4397d90c81e3a43808c1349ef5eec38bb611a074d9d11a2
        ports:
          - 8080:8080
        env:
          OCI_INSECURE: true

      registry:
        image: registry:2
        ports:
          - 5000:5000
        

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Get GitHub Actions network name
        id: get_network
        run: |
          # Find the network ID (GitHub Actions creates one automatically)
          NETWORK_NAME=$(docker network ls --filter name=github_network_* --format "{{.Name}}")
          echo $NETWORK_NAME
          echo "network_name=$NETWORK_NAME" >> $GITHUB_OUTPUT

      - name: Start CTFd after checkout
        run: |
          docker run -d -p 8000:8000 \
            --name ctfd \
            --network ${{ steps.get_network.outputs.network_name }} \
            -e LOG_LEVEL=DEBUG \
            -e PLUGIN_SETTINGS_CM_API_URL=http://chall-manager:8080 \
            -e PLUGIN_SETTINGS_CM_EXPERIMENTAL_RWLOCK=true \
            -e PLUGIN_SETTINGS_CM_MANA_TOTAL=10 \
            -v ${{ github.workspace }}:/opt/CTFd/CTFd/plugins/ctfd_chall_manager \
            ctfd/ctfd:3.7.7@sha256:9847758cdafc5ab86bdc121353dcf5a27a29ce313587270ee90a71bfbda2b910

      - name: Setup basic testing env
        uses: ./.github/workflows/setup-testing
        with: 
          ctfd_mode: teams
          ctfd_user: ${{ env.NAME }}
          ctfd_pass: ${{ env.PASSWORD }}

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0

      - name: Run Functional Tests in mode Teams
        run: |- 
          python -m unittest test/test_api_challenges.py
          python -m unittest test/test_api_admin_instance.py
          python -m unittest test/test_api_instance.py
          python -m unittest test/test_api_mana.py
        env:
          CTFD_URL: http://localhost:8000
        
      - name: Update CTFd into mode users
        uses: ctfer-io/ctfd-setup@e11df98977827a789d3e07537790a3b64091493b # v1.6.0
        with:
          url: 'http://ctfd:8000'
          appearance_name: CTFer.io
          appearance_description: CTFer.io plugin tests
          mode: users 
          admin_name: ${{ env.NAME }}
          admin_email: ctfer-io@protonmail.com
          admin_password: ${{ env.PASSWORD }}
          accounts_incorrect_submissions_per_minute: 9999

      - name: Run Functional Tests in mode Users
        run: |- 
          python -m unittest test/test_api_challenges.py
          python -m unittest test/test_api_admin_instance.py
          python -m unittest test/test_api_instance.py
          python -m unittest test/test_api_mana.py
        env:
          CTFD_URL: http://localhost:8000

      - name: Export Logs and clean CTFd
        if: always()
        run : |
          docker logs ctfd
          docker stop ctfd
          docker rm ctfd
