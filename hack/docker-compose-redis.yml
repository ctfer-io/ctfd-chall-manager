services:
  traefik:
    image: traefik:v3
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:8000
    ports:
      - "8000:8000"
      - "8081:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - testing
  ctfd-ui-1:
    image: ctfd/ctfd:3.8.0@sha256:61712c4af6e9cddccfafc4503484c8091f6325be286d407595b922dc9552b5ae
    container_name: ctfd-ui-1
    networks:
      - testing
    volumes:
      - ../:/opt/CTFd/CTFd/plugins/ctfd_chall_manager
      - uploads:/var/uploads
    environment:
      LOG_LEVEL: DEBUG
      PLUGIN_SETTINGS_CM_API_URL: http://chall-manager:8080
      PLUGIN_SETTINGS_CM_MANA_TOTAL: 10
      # PLUGIN_SETTINGS_CM_EXPERIMENTAL_RWLOCK: true
      REDIS_URL: redis://redis-svc:6379
      DATABASE_URL : mysql+pymysql://root:password@mariadb-svc:3306/ctfd
      SECRET_KEY: toto
      REVERSE_PROXY: true
      WORKERS: 2
      UPLOAD_FOLDER: /var/uploads
    depends_on:
      - chall-manager
      - redis-svc
      - mariadb-svc
    healthcheck:
      test: python3 -c 'import requests; requests.get("http://localhost:8000")'
      interval: 10s
      retries: 3
      timeout: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`localhost`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=8000"
    
  ctfd-ui-2:
    image: ctfd/ctfd:3.8.0@sha256:61712c4af6e9cddccfafc4503484c8091f6325be286d407595b922dc9552b5ae
    container_name: ctfd-ui-2
    networks:
      - testing
    volumes:
      - ../:/opt/CTFd/CTFd/plugins/ctfd_chall_manager
      - uploads:/var/uploads
    environment:
      LOG_LEVEL: DEBUG
      PLUGIN_SETTINGS_CM_API_URL: http://chall-manager:8080
      PLUGIN_SETTINGS_CM_MANA_TOTAL: 10
      # PLUGIN_SETTINGS_CM_EXPERIMENTAL_RWLOCK: true
      REDIS_URL: redis://redis-svc:6379
      DATABASE_URL : mysql+pymysql://root:password@mariadb-svc:3306/ctfd
      SECRET_KEY: toto
      REVERSE_PROXY: true
      WORKERS: 2
      UPLOAD_FOLDER: /var/uploads      
    depends_on:
      ctfd-ui-1:
        condition: service_healthy        
    healthcheck:
      test: python3 -c 'import requests; requests.get("http://localhost:8000")'
      interval: 10s
      retries: 3
      timeout: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`localhost`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=8000"

  chall-manager:
    image: ctferio/chall-manager:v0.6.0@sha256:4d0a0379a3c12b2203500a7852856ef7202c7c54d58207fb88d4b8919d5f6add
    container_name: chall-manager
    pull_policy: always
    ports:
      - 8080:8080
    environment:
      SWAGGER: true
      KUBECONFIG: /tmp/config
      OCI_INSECURE: true
    volumes:
      - ~/.kube/config:/tmp/config:ro
    networks:
      - testing
    labels:
      - "traefik.enable=false"

  chall-manager-janitor:
    image: ctferio/chall-manager-janitor:v0.6.0@sha256:0194e6652aabe59539c1c167e15cc987309c4f49e65c9f3370f358d822246e6e
    container_name: chall-manager-janitor
    pull_policy: always
    environment:
      URL: chall-manager:8080
      TICKER: 30s
    networks:
      - testing
    labels:
      - "traefik.enable=false"

  redis-svc:
    image: redis:7.0.10@sha256:92b8b307ee28ed74da17578064c73307ad41e43f422f0b7e4e91498b406c59e3
    container_name: redis-svc
    ports:
      - 6379:6379
    networks:
      - testing
    labels:
      - "traefik.enable=false"

  mariadb-svc:
    image: mariadb:10.11
    container_name: mariadb-svc
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ctfd
    ports:
      - 3306:3306
    networks:
      - testing
    labels:
      - "traefik.enable=false"
    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --wait_timeout=28800, --log-warnings=0]

  ctfd-setup:
    image: ctferio/ctfd-setup:v1.7.1@sha256:d555410c10f66eb88a6579078d3f2c9131279e3057c21831a69feb447479b877
    container_name: ctfd-setup
    environment:
      URL: http://ctfd-ui-1:8000
      FILE: /.ctfd.yaml
    volumes:
      - .ctfd.yaml:/.ctfd.yaml
    networks:
      - testing
    depends_on:
      ctfd-ui-2:
        condition: service_healthy
    labels:
    - "traefik.enable=false"


  registry:
    image: registry:2
    container_name: registry
    ports:
      - 5000:5000
    networks:
      - testing

  adminer:
    image: adminer:latest
    ports:
      - 8082:8080
    networks:
      - testing

volumes:
  uploads:

networks:
  testing:
    driver: bridge
